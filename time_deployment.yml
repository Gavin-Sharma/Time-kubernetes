apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-service
  labels:
    app: analytics-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analytics-service
  template:
    metadata:
      labels:
        app: analytics-service
    spec:
      containers:
      - name: analytics-service
        image: us.gcr.io/time-382620/time-analytics-service
        ports:
        - containerPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enter-data
  labels:
    app: enter-data
spec:
  replicas: 1
  selector:
    matchLabels:
      app: enter-data
  template:
    metadata:
      labels:
        app: enter-data
    spec:
      containers:
      - name: enter-data
        image: us.gcr.io/time-382620/time-enter_data
        env:
        - name: AUTH_SERVICE_HOST
          value: nodelogin
        - name: MYSQL_HOST
          value: 34.173.173.97
        - name: MYSQL_ROOT_PASSWORD
          value: root
        ports:
        - containerPort: 5000
        imagePullPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-db
  template:
    metadata:
      labels:
        app: mongo-db
    spec:
      containers:
      - name: mongo
        image: us.gcr.io/time-382620/mongo
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: root
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: root
        - name: MONGO_INITDB_DATABASE
          value: analytics
        ports:
        - containerPort: 27017
      volumes:
      - name: mongo-initdb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-db
spec:
  selector:
    matchLabels:
      app: mysql-db
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql-db
    spec:
      containers:
        - name: mysql-db
          image: us.gcr.io/time-382620/mysql
          ports:
            - containerPort: 3306
              name: mysql-db
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_HOST
              value: mysql_db
          volumeMounts:
          - name: mysql-initdb
            mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-configmap
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodelogin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodelogin
  template:
    metadata:
      labels:
        app: nodelogin
    spec:
      containers:
      - name: nodelogin
        image: us.gcr.io/time-382620/time-nodelogin
        ports:
        - containerPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: view-data
spec:
  replicas: 2
  selector:
    matchLabels:
      app: view-data
  template:
    metadata:
      labels:
        app: view-data
    spec:
      containers:
      - name: view-data
        image: us.gcr.io/time-382620/time-view_data
        ports:
        - containerPort: 8004
        env:
        - name: AUTH_SERVICE_HOST
          value: nodelogin
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-configmap
data:
  project1.sql: |
    CREATE DATABASE project1;
    use project1;

    CREATE TABLE times (
      exercise FLOAT(5,2),
      homework FLOAT(5,2),
      sleep FLOAT(5,2),
      phone FLOAT(5,2),
      family FLOAT(5,2),
      school FLOAT(5,2)
    );
